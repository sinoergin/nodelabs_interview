version: '3.8'
name: nodelabs_interview

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: nodelabs_interview_app
        ports:
            - '3000:80'
        env_file:
            - .env.docker
        depends_on:
            - mongo
            - redis
            - rabbitmq
            - elasticsearch

    mongo:
        image: mongo:latest
        container_name: nodelabs_interview_mongo
        ports:
            - '27017:27017'
        volumes:
            - mongo_data:/data/db

    redis:
        image: redis:latest
        container_name: nodelabs_interview_redis
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: nodelabs_interview_rabbitmq
        ports:
            - '5672:5672'
            - '15672:15672' # Management UI
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
        container_name: nodelabs_interview_elasticsearch
        environment:
            - discovery.type=single-node
            - ES_JAVA_OPTS=-Xms512m -Xmx512m
        ports:
            - '9200:9200'
            - '9300:9300'
        volumes:
            - es_data:/usr/share/elasticsearch/data

    kibana:
        image: docker.elastic.co/kibana/kibana:7.17.0
        container_name: nodelabs_interview_kibana
        ports:
            - '5601:5601'
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        depends_on:
            - elasticsearch

networks:
    nodelabs_network:
        external: true
        name: nodelabs_network

volumes:
    mongo_data:
    redis_data:
    rabbitmq_data:
    es_data:
